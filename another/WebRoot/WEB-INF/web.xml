<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  	<!-- 使用spring解决延迟加载问题，针对hibernate等用session的方式 -->
	<!-- 必须放在struts2的配置之前，因为Filter是从上向下过滤的 -->
 	<filter>  
	    <filter-name>hibernateFilter</filter-name>  
	    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>  
<!-- 	    singleSession默认为true,若设为false则等于没用OpenSessionInView   -->
	    <init-param>  
	        <param-name>singleSession</param-name>  
	        <param-value>true</param-value>  
	    </init-param>  
	</filter>  

	<filter-mapping>  
	    <filter-name>hibernateFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>  
	
	
	
 	<!-- 使用spring解决延迟加载问题，针对JPA用EntityManager的方式 -->
	<filter>  
        <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>  
        <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>  
        <init-param>  
        <!-- 指定org.springframework.orm.jpa.LocalEntityManagerFactoryBean在spring配置文件中的名称,默认值为entityManagerFactory  
        如果LocalEntityManagerFactoryBean在spring中的名称不是entityManagerFactory,该参数一定要指定,否则会出现找不到entityManagerFactory的例外 -->  
            <param-name>entityManagerFactoryBeanName</param-name>  
            <param-value>entityManagerFactory</param-value>  
        </init-param>   
    </filter>  
    <filter-mapping>  
        <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>

	
 	<!-- 著名 Character Encoding filter -->
	<filter>  
       <filter-name>encodingFilter</filter-name>  
       <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
       <init-param>  
           <param-name>encoding</param-name>  
           <param-value>UTF-8</param-value>  
       </init-param>  
<!-- 	 forceEncoding为true时， 强制ServletResponse的编码格式和ServletRequest的编码格式一样。 -->
     <init-param>  
           <param-name>forceEncoding</param-name>  
           <param-value>true</param-value>  
       </init-param>
    </filter>  
    
    <filter-mapping>  
       <filter-name>encodingFilter</filter-name>  
       <url-pattern>/*</url-pattern>  
   </filter-mapping>
  
  <filter>
  	<filter-name>struts2</filter-name>
  	<filter-class>
  		org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
  	</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  
  <context-param>
	<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml,
			classpath:applicationPath.xml,
			classpath:jpaContext.xml
		</param-value> 
<!--	<param-value>/WEB-INF/applicationContext.xml</param-value>-->
  </context-param>

 	<context-param>  
        <param-name>log4jConfigLocation</param-name>   
        <param-value>WEB-INF/log4j.properties</param-value>   
    </context-param>  
    <context-param>   
        <param-name>log4jRefreshInterval</param-name>   
        <param-value>60000</param-value>   
    </context-param>   
    
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
  
<!--     需要添加spring-web.jar包，否则用发生错误信息   -->
    <listener>   
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>   
    </listener>  
    
    <listener>
    	<listener-class>
    		com.fred.common.timer.WarnTimer
    	</listener-class>
    </listener>
  
  </web-app>
